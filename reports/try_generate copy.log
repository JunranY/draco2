Traceback (most recent call last):
  File "/home/runner/.cache/pypoetry/virtualenvs/draco-2B3Fy6YM-py3.10/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/runner/.cache/pypoetry/virtualenvs/draco-2B3Fy6YM-py3.10/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/runner/.cache/pypoetry/virtualenvs/draco-2B3Fy6YM-py3.10/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/runner/.cache/pypoetry/virtualenvs/draco-2B3Fy6YM-py3.10/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.10.6/x64/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/home/runner/.cache/pypoetry/virtualenvs/draco-2B3Fy6YM-py3.10/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/home/runner/.cache/pypoetry/virtualenvs/draco-2B3Fy6YM-py3.10/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/runner/.cache/pypoetry/virtualenvs/draco-2B3Fy6YM-py3.10/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from draco import dict_to_facts, answer_set_to_dict, run_clingo
from draco.programs import define, hard, helpers, constraints, generate
from pprint import pprint

prog = (
    generate.program
    + define.program
    + helpers.program
    + hard.program
    + constraints.program
)
with open("../../draco/asp/examples/scatter.lp") as file:
    scatter = file.readlines()
scatter = ("").join(scatter)
for model in run_clingo(
    prog + scatter + ":- {entity(view,_,_)} < 3.", 10, False, {"max_marks": 3}
):
    pprint(answer_set_to_dict(model.answer_set))
    print(model.answer_set)
    print("\n")
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Input [0;32mIn [5][0m, in [0;36m<cell line: 15>[0;34m()[0m
[1;32m     13[0m     scatter [38;5;241m=[39m file[38;5;241m.[39mreadlines()
[1;32m     14[0m scatter [38;5;241m=[39m ([38;5;124m"[39m[38;5;124m"[39m)[38;5;241m.[39mjoin(scatter)
[0;32m---> 15[0m [38;5;28;01mfor[39;00m model [38;5;129;01min[39;00m run_clingo(
[1;32m     16[0m     prog [38;5;241m+[39m scatter [38;5;241m+[39m [38;5;124m"[39m[38;5;124m:- [39m[38;5;124m{[39m[38;5;124mentity(view,_,_)} < 3.[39m[38;5;124m"[39m, [38;5;241m10[39m, [38;5;28;01mFalse[39;00m, {[38;5;124m"[39m[38;5;124mmax_marks[39m[38;5;124m"[39m: [38;5;241m3[39m}
[1;32m     17[0m ):
[1;32m     18[0m     pprint(answer_set_to_dict(model[38;5;241m.[39manswer_set))
[1;32m     19[0m     [38;5;28mprint[39m(model[38;5;241m.[39manswer_set)

File [0;32m~/work/draco2/draco2/draco/run.py:60[0m, in [0;36mrun_clingo[0;34m(program, models, topK, arguments)[0m
[1;32m     57[0m     program [38;5;241m=[39m [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin(program)
[1;32m     59[0m [38;5;66;03m# single-shot solving is often faster, but we cannot change the program[39;00m
[0;32m---> 60[0m ctl [38;5;241m=[39m clingo[38;5;241m.[39mControl([43m[[49m[38;5;124;43m"[39;49m[38;5;124;43m--single-shot[39;49m[38;5;124;43m"[39;49m[43m][49m[43m [49m[38;5;241;43m+[39;49m[43m [49m[43marguments[49m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m topK [38;5;28;01melse[39;00m arguments)
[1;32m     61[0m config: Any [38;5;241m=[39m ctl[38;5;241m.[39mconfiguration
[1;32m     63[0m ctl[38;5;241m.[39madd(
[1;32m     64[0m     [38;5;124m"[39m[38;5;124mbase[39m[38;5;124m"[39m,
[1;32m     65[0m     [],
[1;32m     66[0m     program,
[1;32m     67[0m )

[0;31mTypeError[0m: can only concatenate list (not "dict") to list
TypeError: can only concatenate list (not "dict") to list

